import{c as m,u as i,a as E}from"./createWithBsPrefix-af74ff9a.js";import{p as y}from"./index-67732e07.js";import{r,a as n,j as S,F as J}from"./app-9a505d52.js";import{h as K}from"./ElementChildren-7697c45e.js";import{C as Q}from"./Col-fa9717ab.js";const U={type:y.exports.string,tooltip:y.exports.bool,as:y.exports.elementType},N=r.exports.forwardRef(({as:e="div",className:o,type:t="valid",tooltip:s=!1,...a},l)=>n(e,{...a,ref:l,className:m(o,`${t}-${s?"tooltip":"feedback"}`)}));N.displayName="Feedback";N.propTypes=U;const u=r.exports.createContext({}),R=r.exports.forwardRef(({id:e,bsPrefix:o,className:t,type:s="checkbox",isValid:a=!1,isInvalid:l=!1,as:p="input",...d},f)=>{const{controlId:c}=r.exports.useContext(u);return o=i(o,"form-check-input"),n(p,{...d,ref:f,type:s,id:e||c,className:m(t,o,a&&"is-valid",l&&"is-invalid")})});R.displayName="FormCheckInput";const x=r.exports.forwardRef(({bsPrefix:e,className:o,htmlFor:t,...s},a)=>{const{controlId:l}=r.exports.useContext(u);return e=i(e,"form-check-label"),n("label",{...s,ref:a,htmlFor:t||l,className:m(o,e)})});x.displayName="FormCheckLabel";const G=r.exports.forwardRef(({id:e,bsPrefix:o,bsSwitchPrefix:t,inline:s=!1,reverse:a=!1,disabled:l=!1,isValid:p=!1,isInvalid:d=!1,feedbackTooltip:f=!1,feedback:c,feedbackType:h,className:v,style:w,title:$="",type:F="checkbox",label:g,children:k,as:_="input",...q},z)=>{o=i(o,"form-check"),t=i(t,"form-switch");const{controlId:j}=r.exports.useContext(u),A=r.exports.useMemo(()=>({controlId:e||j}),[j,e]),O=!k&&g!=null&&g!==!1||K(k,x),D=n(R,{...q,type:F==="switch"?"checkbox":F,ref:z,isValid:p,isInvalid:d,disabled:l,as:_});return n(u.Provider,{value:A,children:n("div",{style:w,className:m(v,O&&o,s&&`${o}-inline`,a&&`${o}-reverse`,F==="switch"&&t),children:k||S(J,{children:[D,O&&n(x,{title:$,children:g}),c&&n(N,{type:h,tooltip:f,children:c})]})})})});G.displayName="FormCheck";const C=Object.assign(G,{Input:R,Label:x}),b=r.exports.forwardRef(({bsPrefix:e,type:o,size:t,htmlSize:s,id:a,className:l,isValid:p=!1,isInvalid:d=!1,plaintext:f,readOnly:c,as:h="input",...v},w)=>{const{controlId:$}=r.exports.useContext(u);e=i(e,"form-control");let F;return f?F={[`${e}-plaintext`]:!0}:F={[e]:!0,[`${e}-${t}`]:t},n(h,{...v,type:o,size:s,ref:w,readOnly:c,id:a||$,className:m(l,F,p&&"is-valid",d&&"is-invalid",o==="color"&&`${e}-color`)})});b.displayName="FormControl";const X=Object.assign(b,{Feedback:N}),Y=E("form-floating"),I=r.exports.forwardRef(({controlId:e,as:o="div",...t},s)=>{const a=r.exports.useMemo(()=>({controlId:e}),[e]);return n(u.Provider,{value:a,children:n(o,{...t,ref:s})})});I.displayName="FormGroup";const Z={column:!1,visuallyHidden:!1},L=r.exports.forwardRef(({as:e="label",bsPrefix:o,column:t,visuallyHidden:s,className:a,htmlFor:l,...p},d)=>{const{controlId:f}=r.exports.useContext(u);o=i(o,"form-label");let c="col-form-label";typeof t=="string"&&(c=`${c} ${c}-${t}`);const h=m(a,o,s&&"visually-hidden",t&&c);return l=l||f,t?n(Q,{ref:d,as:"label",className:h,htmlFor:l,...p}):n(e,{ref:d,className:h,htmlFor:l,...p})});L.displayName="FormLabel";L.defaultProps=Z;const B=r.exports.forwardRef(({bsPrefix:e,className:o,id:t,...s},a)=>{const{controlId:l}=r.exports.useContext(u);return e=i(e,"form-range"),n("input",{...s,type:"range",ref:a,className:m(o,e),id:t||l})});B.displayName="FormRange";const M=r.exports.forwardRef(({bsPrefix:e,size:o,htmlSize:t,className:s,isValid:a=!1,isInvalid:l=!1,id:p,...d},f)=>{const{controlId:c}=r.exports.useContext(u);return e=i(e,"form-select"),n("select",{...d,size:t,ref:f,className:m(s,e,o&&`${e}-${o}`,a&&"is-valid",l&&"is-invalid"),id:p||c})});M.displayName="FormSelect";const H=r.exports.forwardRef(({bsPrefix:e,className:o,as:t="small",muted:s,...a},l)=>(e=i(e,"form-text"),n(t,{...a,ref:l,className:m(o,e,s&&"text-muted")})));H.displayName="FormText";const V=r.exports.forwardRef((e,o)=>n(C,{...e,ref:o,type:"switch"}));V.displayName="Switch";const P=Object.assign(V,{Input:C.Input,Label:C.Label}),W=r.exports.forwardRef(({bsPrefix:e,className:o,children:t,controlId:s,label:a,...l},p)=>(e=i(e,"form-floating"),S(I,{ref:p,className:m(o,e),controlId:s,...l,children:[t,n("label",{htmlFor:s,children:a})]})));W.displayName="FloatingLabel";const ee={_ref:y.exports.any,validated:y.exports.bool,as:y.exports.elementType},T=r.exports.forwardRef(({className:e,validated:o,as:t="form",...s},a)=>n(t,{...s,ref:a,className:m(e,o&&"was-validated")}));T.displayName="Form";T.propTypes=ee;const le=Object.assign(T,{Group:I,Control:X,Floating:Y,Check:C,Switch:P,Label:L,Text:H,Range:B,Select:M,FloatingLabel:W});export{le as F};
